<!-- $Id$ -->
<project name="nestbed" default="dist" basedir=".">
    <property file="build.properties"/>
    <property file="${user.home}/build.properties"/>

    <property name="app.name"            value="nestbed"/>
    <property name="app.version"         value="0.4"/>

    <property name="src.home"            value="src"/>
    <property name="classes.home"        value="classes"/>
    <property name="lib.home"            value="lib"/>
    <property name="dist.home"           value="dist"/>
    <property name="misc.home"           value="misc"/>
    <property name="bin.home"            value="bin"/>

    <property name="compile.debug"       value="true"/>
    <property name="compile.deprecation" value="true"/>
    <property name="compile.optimize"    value="false"/>


    <path id="compile.classpath">
        <pathelement location="${lib.home}/useful.jar"/>
    </path>

    <target name="all" depends="clean,compile"
            description="Clean classes and dist directories, then compile"/>


    <target name="clean" depends="distclean"
            description="Delete old build and dist directories">
        <delete dir="${classes.home}"/>
        <delete file="${src.home}/edu/clemson/cs/nestbed/server/nesc/parser/Parser.java"/>
        <delete file="${src.home}/edu/clemson/cs/nestbed/server/nesc/parser/Token.java"/>
        <delete file="${src.home}/edu/clemson/cs/nestbed/server/nesc/parser/Lexer.java"/>
    </target>


    <target name="compile" depends="parser"
            description="Compile Java sources">
        <mkdir dir="${classes.home}"/>
        <javac      srcdir="${src.home}"
                   destdir="${classes.home}"
                     debug="${compile.debug}"
               deprecation="${compile.deprecation}"
                  optimize="${compile.optimize}">
            <compilerarg value="-Xlint:unchecked"/>
            <classpath refid="compile.classpath"/>
        </javac>

        <rmic     base="${classes.home}"
              includes="**/*Impl.class"/>
    </target>


    <target name="distclean" description="Clean distribution directory">
        <delete dir="${dist.home}"/>
    </target>

    <target name="dist" depends="compile,javadoc,distclean"
            description="Create binary distribution">

        <!-- Copy documentation subdirectories -->
<!--
        <mkdir dir="${dist.home}/docs"/>
        <copy todir="${dist.home}/docs">
            <fileset dir="${docs.home}"/>
        </copy>

-->
        <mkdir dir="${dist.home}"/>

        <!-- Create application JAR files -->
        <jar  jarfile="${dist.home}/${app.name}-${app.version}.jar"
              basedir="${classes.home}"/>

        <jar  jarfile="${dist.home}/${app.name}-${app.version}.jar"
              basedir="${misc.home}"
               update="true"
             includes="nestbed.jocl,serverLog.conf,clientLog.conf,server.properties,common.properties"/>

        <copy todir="${dist.home}/lib">
            <fileset dir="${lib.home}">
                <exclude name="nesC/**"/>
            </fileset>
        </copy>

        <signjar     alias="nestbed"
                 storepass="123456">
            <fileset dir="${dist.home}">
            </fileset>
        </signjar>

        <symlink      link="${dist.home}/nestbed.jar"
                  resource="${app.name}-${app.version}.jar"
                 overwrite="true"/>

        <copy todir="${dist.home}">
            <fileset dir="${misc.home}">
                <include name="nestbed.jnlp"/>
                <include name="logView.php"/>
            </fileset>
        </copy>
        <copy file="${misc.home}/nestbed.jnlp" todir="${dist.home}"/>
    </target>

    <target name="parser"
            description="Parse the java_cup nesC grammar">
        <exec dir="${bin.home}" executable="/bin/bash" failonerror="true">
            <arg line="parser.sh"/>
        </exec>
        <!--
        For now, I'm sticking this in parser.sh since there isn't a jflex ebuild

        <jflex    file="${src.home}/edu/clemson/cs/nestbed/server/nesc/parser/nesc.jflex"
               destdir="${src.home}/edu/clemson/cs/nestbed/server/nesc/parser/"
                 nobak="on"/>
        -->


    </target>

    <target name="javadoc" depends="compile"
            description="Create Javadoc API documentation">

<!--
        <mkdir          dir="${dist.home}/docs/api"/>
        <javadoc sourcepath="${src.home}"
                    destdir="${dist.home}/docs/api"
               packagenames="*">
            <classpath refid="compile.classpath"/>
        </javadoc>
-->
    </target>
</project>
